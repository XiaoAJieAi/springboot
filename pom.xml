<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.n22</groupId>
	<artifactId>springbootdemo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>springbootdemo</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<!-- <version>2.3.1.RELEASE</version> -->
    		<scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- mybatis -->
		<dependency>
		    <groupId>org.mybatis.spring.boot</groupId>
		    <artifactId>mybatis-spring-boot-starter</artifactId>
		    <version>2.1.3</version>
		</dependency>
		
		 <dependency>
	        <groupId>com.baomidou</groupId>
	        <artifactId>mybatis-plus-boot-starter</artifactId>
	        <version>3.4.1</version>
	    </dependency>
	    
		<dependency>
		   <groupId>com.alibaba</groupId>
		   <artifactId>druid-spring-boot-starter</artifactId>
		   <version>1.2.4</version>
		</dependency>
		
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-jdbc</artifactId>
      	</dependency>
      	
      	<!-- aop依赖 -->
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-aop</artifactId>
      	</dependency>
      	
      	<!-- thymeleaf依赖 -->
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-thymeleaf</artifactId>
      	</dependency>
      	
      	<!-- junit依赖 -->
      	<dependency>
	        <groupId>junit</groupId>
	        <artifactId>junit</artifactId>
	        <scope>compile</scope>
      	</dependency>
      	
    	<!-- spring-boot-starter-cache依赖 -->
    	<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-cache</artifactId>
      	</dependency>
      	
      	<!-- springboot redis -->
      	<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-data-redis</artifactId>
      	</dependency>
      	
      	<!--actuator模块为SpringBoot提供一系列用于监控的端点-->
      	<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-actuator</artifactId>
	    </dependency>
	    
      	<!-- 安全需要，为了保证actuator暴露的监控接口的安全性，需要添加安全控制的依赖spring-boot-start-security依赖，访问应用监控端点时，都需要输入验证信息。-->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-security</artifactId>
	    </dependency>
	    
	    <!-- 发送邮件依赖 -->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-mail</artifactId>
      	</dependency>
	    
      	<!-- ehcache依赖 -->
      	<dependency>
	        <groupId>net.sf.ehcache</groupId>
	        <artifactId>ehcache</artifactId>
      	</dependency>
      	
      	<!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui -->
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>2.9.2</version>
		    <exclusions>
		        <exclusion>
		            <groupId>io.swagger</groupId>
		            <artifactId>swagger-models</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 -->
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.9.2</version>
		    <exclusions>
		        <exclusion>
		            <groupId>io.swagger</groupId>
		            <artifactId>swagger-models</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		<!-- io.springfox:springfox-swagger-ui:2.9.2中依赖了swagger-models的1.5.20版本，通过排除springfox-swagger-ui中的swagger-models依赖，
		导入io.swagger:swagger-models的1.5.21版本.解决io.swagger.models.parameters.AbstractSerializableParameter实例化参数时example为
		空字符串""而报错的问题.因为1.5.20的example只判断是否为null,1.5.21判断了是否为null和""-->
		<dependency>
		    <groupId>io.swagger</groupId>
		    <artifactId>swagger-models</artifactId>
		    <version>1.5.21</version>
		</dependency>
		<!-- 热部署 -->
		<dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <optional>true</optional>
      </dependency>
      
      <!-- 集成日志logback -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-logging</artifactId>
      </dependency>
      
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
	            <configuration>
                	<fork>true</fork>
            	</configuration>
			</plugin>
		</plugins>
	</build>

</project>
